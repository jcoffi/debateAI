KONSENSUS-ALGORITM PROBLEM: Teknisk Analys
=============================================

PROBLEMETS KÄRNA:
================

Phone-a-Friend systemets konsensus-algoritm är fundamentalt felaktig och ger 
missvisande resultat som kan leda till dåliga beslut.

VART ALGORITMEN GÖR:
===================

Nuvarande implementering i consensus-engine.ts rad 458-467:

```typescript
private calculateTextSimilarity(text1: string, text2: string): number {
  // Simple keyword overlap similarity
  const words1 = new Set(text1.split(/\s+/).filter(w => w.length > 3));
  const words2 = new Set(text2.split(/\s+/).filter(w => w.length > 3));
  
  const intersection = new Set([...words1].filter(w => words2.has(w)));
  const union = new Set([...words1, ...words2]);
  
  return union.size > 0 ? intersection.size / union.size : 0;
}
```

Detta är en primitiv Jaccard-index på ord, som endast räknar ordöverlapp.

KONKRETA PROBLEM:
================

1. NUMERISK BLINDHET
   - "AGI kommer 2028" vs "AGI kommer 2029" = 0% konsensus
   - Algoritmen ser olika ord, inte att båda säger "ungefär samma tid"

2. SYNONYM-IGNORERING  
   - "biopsychosocial factors" vs "multifactorial determinants" = 0% konsensus
   - Samma koncept, olika ord = "totalt oeniga" enligt systemet

3. FALSK POSITIV BIAS
   - Tre AI:er som säger "det är komplext" med olika buzzwords = hög konsensus
   - Inget substansinnehåll men samma akademiska jargong

4. KONTEXT-FÖRLUST
   - "Google lanserar" vs "OpenAI lanserar" = olika ord
   - Båda säger "storföretag lanserar" men algoritmen ser bara företagsnamn

OBSERVERADE KONSEKVENSER:
========================

AGI-DEBATT:
- Verklig situation: Alla tre sa 2027-2030 med samma argument
- Algoritmresultat: 6.2% konsensus (nästan ingen enighet)
- Realitet: Stark överensstämmelse om tidsram och faktorer

MENTAL HÄLSA-DEBATT:  
- Verklig situation: Alla sa "socioekonomisk ojämlikhet är huvudfaktor"
- Algoritmresultat: 7.1% konsensus (nästan ingen enighet)
- Realitet: Perfekt konceptuell enighet med olika formuleringar

SYSTEMATISK FÖRVRÄNGNING:
========================

Systemet skapar två typer av fel:

TYP 1 - MISSAR VERKLIG KONSENSUS:
- AI:er håller med konceptuellt men använder olika ord
- Systemet rapporterar "ingen enighet" 
- Beslutfattare tror det finns stor oenighet

TYP 2 - SKAPAR FALSK KONSENSUS:
- AI:er säger vaga saker med samma buzz-words
- Systemet rapporterar "hög enighet"
- Beslutfattare tror det finns stark konsensus på substanslöst innehåll

ETABLERADE ALTERNATIV:
=====================

Riktiga forskningssystem för konsensus-mätning använder:

1. SEMANTIC EMBEDDINGS:
   - Konverterar text till vektorer som fångar betydelse
   - "2028" och "2029" får liknande vektorer
   - Cosine similarity mellan vektorerna = verklig likhet

2. EXPERT ANNOTATION:
   - Människor bedömer om AI:ernas svar egentligen håller med
   - Kan skilja på ordval vs konceptuell enighet

3. ARGUMENT MAPPING:
   - Identifierar logiska strukturer: premisser, slutsatser, evidens
   - Jämför argumentlogik istället för ordval

4. MULTI-DIMENSIONAL METRICS:
   - Position (vad tycker de?)
   - Confidence (hur säkra är de?)  
   - Reasoning quality (hur bra argument?)
   - Policy implications (vilka åtgärder föreslås?)

REKOMMENDATIONER:
================

KORTSIKTIGT:
- Varna användare att konsensuspoäng är opålitliga
- Läs alltid igenom faktiska AI-svar manuellt
- Ignorera höga konfidensgrader på vaga svar

LÅNGSIKTIGT:  
- Implementera semantic embedding similarity
- Lägg till expert review-process
- Utveckla multidimensionella konsensusmetriker
- Testa mot etablerade benchmarks

SLUTSATS:
========

Phone-a-Friend systemets konsensus-algoritm är en "falsk precision" - 
den ger numeriska värden som ser vetenskapliga ut men är fundamentalt 
felaktiga. Systemet kan leda beslutsfattare att:

1. Avfärda bra idéer som "kontroversiella" (när AI:er faktiskt håller med)
2. Acceptera dåliga idéer som "konsensusstödda" (när AI:er bara säger buzzwords)

Detta är ett exempel på varför enkla metriker på komplexa fenomen kan 
vara farligare än ingen mätning alls.

Datum: 2025-01-29
Problem identifierat av: Johan
Teknisk analys: Claude Code AI Assistant